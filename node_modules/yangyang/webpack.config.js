const path = require('path');
const webpack = require('webpack');
const UglifyJSPlugin = require('uglifyjs-webpack-plugin');

module.exports = {
    entry : {
        "bundle" : './src/app.js',
        "test" : './src/test/js/app.js'
    },

    output : {
        path : path.join(__dirname,'dist'),
        publicPath:'/dist/', //将 publicPath 配置为相对于 html 的路径，使按需加载的资源生成在 dist 目录下并且页面能正确地引用到它。被许多Webpack的插件用于在生产模式下更新内嵌到css、html文件里的url值。
        filename : '[name].[chunkhash:30].js'
    },

    module:{
        loaders:[
            /*{
                test:/\.js$/,//匹配.js文件，如果通过则使用下面的loader
                loader: 'babel-loader',
                exclude: /node_modules/
            },*/{
                test:/\.css$/,
                loader:'style-loader!css-loader'
            }
        ]
    },
    //本地服务 最主要的功能是可以监听工程目录文件的改动，当我们修改源文件并保存的时候，它可以实现重新打包，并且自动刷新浏览器（ hot-loading ）来看到效果。
    devServer:{
        port:9001, //服务器端口
        publicPath:'/dist/'  //打包后资源路径
    },
    //异步加载
    plugins: [
        new webpack.optimize.ModuleConcatenationPlugin(),
        new UglifyJSPlugin()  //压缩文件
    ],


}